package servidor;

import java.io.FileInputStream;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Properties;

import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;

/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "PublicadorPaqueteService", targetNamespace = "http://servidor/")
public class PublicadorPaqueteService extends Service {

    private final static QName PUBLICADORPAQUETESERVICE_QNAME = new QName("http://servidor/", "PublicadorPaqueteService");

    public PublicadorPaqueteService() throws MalformedURLException {
        super(getDynamicWsdlUrl(), PUBLICADORPAQUETESERVICE_QNAME);
    }

    public PublicadorPaqueteService(WebServiceFeature... features) throws MalformedURLException {
        super(getDynamicWsdlUrl(), PUBLICADORPAQUETESERVICE_QNAME, features);
    }

    private static URL getDynamicWsdlUrl() {
        Properties properties = new Properties();
        try {
            String configPath = System.getProperty("user.home") + "/.volandoUy/config.properties";
            properties.load(new FileInputStream(configPath));

            String hostIP = properties.getProperty("hostIP", "localhost");
            String hostPort = properties.getProperty("hostPortPaquetes", "9104");
            String wsdlPath = "/PublicadorPaquetes?wsdl";

            String wsdlUrl = "http://" + hostIP + ":" + hostPort + wsdlPath;
            return new URL(wsdlUrl);
        } catch (IOException e) {
            throw new RuntimeException("Error al cargar la URL del WSDL desde config.properties", e);
        }
    }

    public PublicadorPaquete getPublicadorPaquetePort() {
        return super.getPort(new QName("http://servidor/", "PublicadorPaquetePort"), PublicadorPaquete.class);
    }

    public PublicadorPaquete getPublicadorPaquetePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://servidor/", "PublicadorPaquetePort"), PublicadorPaquete.class, features);
    }
}
