/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.31
 * Generated at: 2024-11-17 17:49:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import servidor.DataCliente;
import servidor.DataAerolinea;
import servidor.DataRutaVuelo;
import servidor.DataReserva;
import servidor.DataPasajes;
import servidor.DataCheckIn;
import java.util.ArrayList;
import java.util.List;

public final class consulta_002dcheck_002din_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(11);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("servidor.DataCliente");
    _jspx_imports_classes.add("servidor.DataAerolinea");
    _jspx_imports_classes.add("servidor.DataPasajes");
    _jspx_imports_classes.add("servidor.DataRutaVuelo");
    _jspx_imports_classes.add("servidor.DataReserva");
    _jspx_imports_classes.add("servidor.DataCheckIn");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"es\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<title>Volando.uy | Consultar Reservas de vuelo con Check In</title>\n");
      out.write("<link href=\"css/consulta-reserva.css\" rel=\"stylesheet\">\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("\n");
if (session == null || session.getAttribute("usuario") == null) {
        response.sendRedirect("login.jsp");
        return;
	}

	
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<style>\n");
      out.write(".consulta-button {\n");
      out.write("	background-color: white;\n");
      out.write("	color: #1E3E62;\n");
      out.write("	margin-left: 5px;\n");
      out.write("	border-radius: 4px;\n");
      out.write("	border: 2px solid transparent;\n");
      out.write("	cursor: pointer;\n");
      out.write("	font-size: 16px;\n");
      out.write("	transition: background-color 0.3s;\n");
      out.write("	text-decoration: underline;\n");
      out.write("	margin-top: 50px;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".consulta-button:hover {\n");
      out.write("	background-color: #EF9C66;\n");
      out.write("}\n");
      out.write("\n");
      out.write("@media ( min-width : 992px) {\n");
      out.write("	.main-page {\n");
      out.write("		margin-left: 300px;\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./header.jsp", out, false);
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "./side-menu.jsp", out, false);
      out.write("\n");
      out.write("    <div class=\"main-page container col-6\">\n");
      out.write("    	<div id=\"main-content\" class=\"main-content\">\n");
      out.write("	<div style=\"display: flex; flex-direction: column;\" class=\"container\">\n");
      out.write("		<h2>Tus reservas con check-in:</h2>\n");
      out.write("		<div class=\"accordion\" id=\"accordionExample\">\n");
      out.write("			");

                            ArrayList<DataCheckIn> checkins = (ArrayList<DataCheckIn>) request.getAttribute("checkins");
                            if (checkins == null) { 
      out.write("\n");
      out.write("			<div class=\"alert alert-warning\" role=\"alert\">No tienes\n");
      out.write("				ningun Check In realizado.</div>\n");
      out.write("\n");
      out.write("			");
 }else	{
                                for (servidor.DataCheckIn checkIn: checkins) { 
                            
      out.write("\n");
      out.write("			<div class=\"accordion-item\">\n");
      out.write("				<h2 class=\"accordion-header\"\n");
      out.write("					id=\"");
      out.print(checkIn.getReserva().getNickC());
      out.write('-');
      out.print(checkIn.getReserva().getNomV());
      out.write("-heading\">\n");
      out.write("					<button class=\"accordion-button\" type=\"button\"\n");
      out.write("						data-bs-toggle=\"collapse\"\n");
      out.write("						data-bs-target=\"#");
      out.print(checkIn.getReserva().getNickC());
      out.write('-');
      out.print(checkIn.getReserva().getNomV());
      out.write("-collapse\"\n");
      out.write("						aria-expanded=\"true\"\n");
      out.write("						aria-controls=\"");
      out.print(checkIn.getReserva().getNickC());
      out.write('-');
      out.print(checkIn.getReserva().getNomV());
      out.write("-collapse\">\n");
      out.write("						");
      out.print( checkIn.getReserva().getNomV() );
      out.write("\n");
      out.write("					</button>\n");
      out.write("				</h2>\n");
      out.write("				<div class=\"accordion-collapse collapse\"\n");
      out.write("					id=\"");
      out.print(checkIn.getReserva().getNickC());
      out.write('-');
      out.print(checkIn.getReserva().getNomV());
      out.write("-collapse\"\n");
      out.write("					aria-labelledby=\"");
      out.print(checkIn.getReserva().getNickC());
      out.write('-');
      out.print(checkIn.getReserva().getNomV());
      out.write("-heading\"\n");
      out.write("					data-bs-parent=\"#accordionExample\">\n");
      out.write("					<div class=\"accordion-body\">\n");
      out.write("						<strong>Detalle:</strong>\n");
      out.write("						<ul>\n");
      out.write("							<li><strong>Nickname del cliente:</strong> ");
      out.print(checkIn.getReserva().getNickC());
      out.write("</li>\n");
      out.write("							<li><strong>Hora de embarque:</strong> ");
      out.print(checkIn.getHoraEmbarqueFormatted());
      out.write("</li>\n");
      out.write("							<li><strong>Nombre de vuelo:</strong> ");
      out.print(checkIn.getReserva().getNomV());
      out.write("</li>\n");
      out.write("							<li><strong>Fecha de reserva:</strong> ");
      out.print(checkIn.getReserva().getFechaReserva());
      out.write("</li>\n");
      out.write("							<li><strong>Tipo de asiento:</strong> ");
      out.print(checkIn.getReserva().getTipoAsiento());
      out.write("</li>\n");
      out.write("							<li><strong>Cantidad de pasajes:</strong> ");
      out.print(checkIn.getReserva().getCantPasajes());
      out.write("</li>\n");
      out.write("							<li><strong>Cantidad extra equipaje:</strong> ");
      out.print(checkIn.getReserva().getCantExtra());
      out.write("</li>\n");
      out.write("							<li><strong>Costo Total:</strong> ");
      out.print(checkIn.getReserva().getCostoTotal());
      out.write("</li>\n");
      out.write("							<li><strong>Pasajes:</strong>\n");
      out.write("								<ul>\n");
      out.write("									");
 
                                                    List<servidor.DataPasajes> pasajes = checkIn.getReserva().getPasajes();
                                                    if (pasajes != null) {
                                                        for (servidor.DataPasajes pasaje : pasajes) {
                                                    
      out.write("\n");
      out.write("									<li>");
      out.print(pasaje.getApellido());
      out.write(',');
      out.write(' ');
      out.print(pasaje.getNombre());
      out.write(". Asiento: ");
      out.print(pasaje.getAsiento());
      out.write("</li>\n");
      out.write("									");

                                                        }
                                                    }
                                                    
      out.write("\n");
      out.write("								</ul></li>\n");
      out.write("						</ul>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("			");
 
                                }
                            }
                            
      out.write("\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("	</div>\n");
      out.write("    </div>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
